# =============================================================================
# LiveKit MVP Agent - Environment Configuration Template
# =============================================================================
# Copy this file to .env and fill in your actual values:
#   cp .env.example .env
#
# STANDALONE MODE: To run without LiveKit, use:
#   make run-standalone
# or simply leave LIVEKIT_* variables empty

# =============================================================================
# LIVEKIT CONFIGURATION (Optional - only needed for LiveKit mode)
# =============================================================================
# LiveKit server URL and credentials
# Leave blank or omit to run in standalone mode (--no-livekit)
LIVEKIT_URL=
LIVEKIT_API_KEY=
LIVEKIT_API_SECRET=

# =============================================================================
# TEXT-TO-SPEECH (TTS) CONFIGURATION
# =============================================================================
# Primary TTS engine to use
# Options: elevenlabs | kokoro | piper | noop
# Default: elevenlabs
TTS_PRIMARY=elevenlabs

# Fallback TTS engine if primary fails
# Options: elevenlabs | kokoro | piper | noop
# Default: noop
TTS_FALLBACK=noop

# TTS Model (for ElevenLabs)
# Options: eleven_flash_v2_5 | eleven_multilingual_v2 | eleven_turbo_v2_5
# Default: eleven_flash_v2_5 (fastest, multilingual)
TTS_MODEL=eleven_flash_v2_5

# TTS Voice (for Kokoro/Piper)
# Default: af_sarah (Kokoro)
TTS_VOICE=af_sarah

# TTS Speed (0.5 - 2.0)
# Default: 1.0
TTS_SPEED=1.0

# =============================================================================
# ELEVENLABS TTS CONFIGURATION
# =============================================================================
# ElevenLabs API key (required if TTS_PRIMARY=elevenlabs)
# Get your API key from: https://elevenlabs.io/app/settings/api-keys
ELEVENLABS_API_KEY=

# ElevenLabs Voice ID
# Default: 21m00Tcm4TlvDq8ikWAM (Rachel - young, pleasant)
# Find voice IDs at: https://elevenlabs.io/app/voice-library
# Popular voices:
#   - Rachel (EN female): 21m00Tcm4TlvDq8ikWAM
#   - Adam (EN male): pNInz6obpgDQGcFmaJgB
#   - Charlotte (FR female): XB0fDUnXU5powFXDhCwa
#   - Antoine (FR male): ErXwobaYiN019PkySvjV
ELEVENLABS_VOICE_ID=21m00Tcm4TlvDq8ikWAM

# =============================================================================
# SPEECH-TO-TEXT (STT) CONFIGURATION
# =============================================================================
# Whisper model size
# Options: tiny | base | small | medium | large | large-v2 | large-v3
# Default: medium (good balance of speed/accuracy)
WHISPER_MODEL=medium

# Whisper compute device
# Options: cpu | cuda | auto
# Default: auto
WHISPER_DEVICE=auto

# Whisper compute type
# Options: int8 | float16 | float32
# Default: int8 (fastest, lowest memory)
WHISPER_COMPUTE_TYPE=int8

# =============================================================================
# LARGE LANGUAGE MODEL (LLM) CONFIGURATION
# =============================================================================
# Ollama base URL
# Default: http://localhost:11434
# Ensure Ollama is running: brew services start ollama
OLLAMA_BASE_URL=http://localhost:11434

# Primary LLM model name
# Must be pulled via: ollama pull <model>
# Default: llama3.2:3b (optimized for speed)
# Alternatives: llama3.1:8b, mistral:7b, codellama:7b
LLM_MODEL=llama3.2:3b

# Fallback LLM model (if primary fails)
# Default: llama3.2:1b (ultra-fast, lower quality)
LLM_FALLBACK=llama3.2:1b

# LLM temperature (0.0 - 2.0)
# Lower = more deterministic, Higher = more creative
# Default: 0.7
LLM_TEMPERATURE=0.7

# LLM max output tokens
# Default: 512
LLM_MAX_TOKENS=512

# =============================================================================
# VOICE ACTIVITY DETECTION (VAD) CONFIGURATION
# =============================================================================
# VAD detection threshold (0.0 - 1.0)
# Higher = more strict (less noise, might miss speech)
# Default: 0.5
VAD_THRESHOLD=0.5

# Minimum silence duration to end speech (seconds)
# Default: 0.5
VAD_MIN_SILENCE_DURATION=0.5

# Speech padding duration (seconds)
# Default: 0.2
VAD_SPEECH_PAD=0.2

# =============================================================================
# AUDIO PROCESSING CONFIGURATION
# =============================================================================
# Audio sample rate (Hz)
# Default: 16000 (standard for speech)
SAMPLE_RATE=16000

# Audio channels
# Default: 1 (mono)
CHANNELS=1

# Audio chunk size (samples)
# Default: 1024
CHUNK_SIZE=1024

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================
# Log level
# Options: DEBUG | INFO | WARNING | ERROR | CRITICAL
# Default: INFO
LOG_LEVEL=INFO

# Log format (used for formatting)
# Default: detailed
LOG_FORMAT=%(asctime)s - %(name)s - %(levelname)s - %(message)s

# =============================================================================
# APPLICATION CONFIGURATION
# =============================================================================
# Debug mode (enables verbose logging)
# Default: false
DEBUG=false

# Verbose mode (extra logging details)
# Default: false
VERBOSE=false

# =============================================================================
# WEBUI CONFIGURATION (Optional - for browser interface)
# =============================================================================
# WebUI server host
# Default: 0.0.0.0 (all interfaces)
# Use 127.0.0.1 for localhost only
WEBUI_HOST=0.0.0.0

# WebUI server port
# Default: 8000
WEBUI_PORT=8000

# Enable WebUI hot reload (development mode)
# Default: true
WEBUI_RELOAD=true

# =============================================================================
# USAGE EXAMPLES
# =============================================================================
# 1. Standalone mode (no LiveKit):
#    make run-standalone
#
# 2. Dry-run (check config only):
#    make run-dry
#
# 3. With LiveKit (requires LIVEKIT_* credentials):
#    make run
#
# 4. WebUI mode (browser interface):
#    make run-webui
#
# 5. Docker mode:
#    docker-compose up webui
